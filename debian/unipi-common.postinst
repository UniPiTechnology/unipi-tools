#!/bin/sh
set -e

if grep -q 'Hardware[[:blank:]]*:[[:blank:]]*BCM' /proc/cpuinfo; then
	if [ -f /usr/share/rpikernelhack/overlays/ds2482.dtbo ]; then
        rm -f /boot/overlays/ds2482.dtbo
        dpkg-divert --package rpikernelhack --remove --rename /boot/overlays/ds2482.dtbo
        sync
	fi
	if [ -f /usr/share/rpikernelhack/overlays/neuronee.dtbo ]; then
        rm -f /boot/overlays/neuronee.dtbo
        dpkg-divert --package rpikernelhack --remove --rename /boot/overlays/neuronee.dtbo
        sync
	fi
	if [ -f /usr/share/rpikernelhack/overlays/neuron-spi-new.dtbo ]; then
        rm -f /boot/overlays/neuron-spi-new.dtbo
        dpkg-divert --package rpikernelhack --remove --rename /boot/overlays/neuron-spi-new.dtbo
        sync
	fi
	if [ -f /usr/share/rpikernelhack/overlays/neuron-spi.dtbo ]; then
        rm -f /boot/overlays/neuron-spi.dtbo
        dpkg-divert --package rpikernelhack --remove --rename /boot/overlays/neuron-spi.dtbo
        sync
	fi
	if [ -f /usr/share/rpikernelhack/overlays/unipiee.dtbo ]; then
        rm -f /boot/overlays/unipiee.dtbo
        dpkg-divert --package rpikernelhack --remove --rename /boot/overlays/unipiee.dtbo
        sync
	fi
fi

update_initramfs() {
  [ -x /usr/sbin/update-initramfs -a -e /etc/initramfs-tools/initramfs.conf ] \
    || return 0
  # set initramfs ...  in /boot/config.txt
  if [ -x /etc/kernel/postinst.d/initrd-config ]; then
      /etc/kernel/postinst.d/initrd-config || true
      # clear lines with initramfs in config.txt. This is now in include file
      grep -q -e "^[[:blank:]]*initramfs" /boot/config.txt && sed "/^[[:blank:]]*initramfs/d" -i /boot/config.txt
  fi
  # reconfigure kernel, which can be installed in the same batch
  # try to find kernel packege name using attribute Provides: linux-image
  LINUX_IMAGE=$(dpkg-query -W -f='Package: ${Package}\nProvides: ${Provides}\n' | grep -B 1 -E "^Provides: .*linux-image" | awk '/^Package:/ {print $2}')
  if [ -n "$LINUX_IMAGE" ]; then
      dpkg-reconfigure "$LINUX_IMAGE" || true
  else
      update-initramfs -c -t -k `uname -r` || true
  fi
}


if [ "$1" = "configure" ]; then

    # if initramfs config file is default, change MODULES=most to MODULES=list
    if dpkg --verify initramfs-tools-core | grep -q '/etc/initramfs-tools/initramfs.conf' ; then
        true
    else
        sed -i 's/^MODULES=most/MODULES=list/' /etc/initramfs-tools/initramfs.conf
    fi
    if test -f /etc/default/raspberrypi-kernel; then
        sed 's/#INITRD=Yes/INITRD=Yes/' -i /etc/default/raspberrypi-kernel
    fi
    if [ -x /etc/initramfs-tools/scripts/init-bottom/setbootconfig.sh ]; then
        #prepare /boot/config.txt
        /etc/initramfs-tools/scripts/init-bottom/setbootconfig.sh --noreboot
    fi
    update_initramfs

fi

#DEBHELPER#

exit 0
